<head>
  <title>Data Center</title>

  <style>
    body {
      color: #d3d3d3;
      font: 12pt arial;
      background-color: #222222;
    }
    #mynetwork {
      width: 800px;
      height: 800px;
      border: 1px solid #444444;
      background-color: #222222;
    }
  </style>
  <script type="text/javascript" src="/js/dependencies/sails.io.js"></script>
  <script type="text/javascript">
    io.socket.on('hello', function (data) {
      console.log('Hello', data);
      alert("Hello");
    });
    io.socket.get('/dc/showDynamic', function(body, response) {
      console.log("showDynamic", body);
    })
  </script>
  <script type="text/javascript" src="/js/vis.js"></script>
  <link href="/style/vis-network.min.css" rel="stylesheet" type="text/css">
</head>

<body class=" hasGoogleVoiceExt">
<div id="mynetwork">
  <div class="vis-network" tabindex="900"
       style="position: relative; overflow: hidden; touch-action: pan-y; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); width: 100%; height: 100%;">
    <canvas width="1000" height="1000"
            style="position: relative; touch-action: none; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); width: 100%; height: 100%;"></canvas>
  </div>
</div>
<script type="text/javascript">

  var nodesArray = [
    <% _.each(hardware, function (hw) { %>
      { id: 'h<%= hw.id %>', label :'<%= hw.name %>', group :'<%= hw.type %>' },
    <% }); %>
  <% _.each(resources, function (r) { %>
    { id: 'r<%= r.id %>', label: '<%= r.name %>', group: 'R<%= r.type %>' },
  <% }); %>
  <% _.each(apps, function (a) { %>
    { id: 'a<%= a.id %>', label: '<%= a.name %>', group: 'App' },
  <% }); %>
  <% _.each(services, function (a) { %>
    { id: 'srv<%= a.id %>', label: '<%= a.name %>', group: 'Service' },
  <% }); %>
  <% _.each(instances, function (a) { %>
    { id: 'i<%= a.id %>', label: '<%= a.name %>', group: 'Instance' },
  <% }); %>
  ];

  var edgesArray = [
    <% _.each(resources, function (r) { %>
      { from: 'h<%= r.hardware.id %>', to: 'r<%= r.id %>' },
      <% _.each(r.instances, function (i) {
          if(r.type == 'compute')  {
        %>
        { from: 'i<%= i.id %>', to: 'r<%= r.id %>' },
      <% }
      }); %>
    <%});%>
  <% _.each(services, function (s) { %>
    <% _.each(s.instances, function (i) { %>
      { from: 'srv<%= s.id %>', to: 'i<%= i.id %>' },
    <% }); %>
    <% _.each(s.apps, function (a) { %>
      { from: 'a<%= a.id %>', to: 'srv<%= s.id %>' },
    <% }); %>
  <% }); %>
  ];
  let nodes = new vis.DataSet(nodesArray);
  let edges = new vis.DataSet(edgeArray);

  // create a network
  var container = document.getElementById('mynetwork');
  var data = {
    nodes: nodes,
    edges: edges
  };
  var options = {

    nodes: {
      shape: 'dot',
      size: 20,
      font: {
        size: 15,
        color: '#ffffff'
      },
      borderWidth: 2
    },
    edges: {
      width: 2
    },
    groups: {
      App: {
        color: {background: 'yellow', border: 'Orange'},
        shape: 'circle',
        level: 1,
      },
      Service: {
        color: {background: 'green', border: 'gray'},
        shape: 'diamond',
        level: 2,
      },
      Instance: {
        shape: 'diamond',
        color: {background: 'lightgreen', border: 'white'},
        level: 3,
      },
      storage: {
        shape: 'database',
        color: {background: 'red', border: 'gray'},
        level: 5,
        size: 15
      },
      Rstorage: {
        shape: 'database',
        color: {background: 'pink', border: 'white'},
        level: 4,
        scaling: {label: { enabled: false}},
        size: 15
      },
      compute: {
        shape: 'square',
        color: {background: 'blue', border: 'gray'},
        level: 5,
        physics: false
      },
      Rcompute: {
        shape: 'square',
        color: {background: 'lightblue', border: 'white'},
        level: 4
      },
      network: {
        shape: 'star',
        color: {background: 'brown', border: 'gray'},
        level: 5,
        physics: false
      },
      Rnetwork: {
        shape: 'star',
        color: {background: 'tan', border: 'white'},
        level: 4
      }
    }
  };
  var network = new vis.Network(container, data, options);

</script>


</body></html>
